name: Check for Drift
description: Checks if the generated output is different from the input file

inputs:
  input_file:
    description: The input file to compare
    required: true

  merge_with:
    description: The file to merge with the input file
    required: false

runs:
  using: composite

  steps:
    - name: Check repository out
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      env:
        action_repo: ${{ github.action_repository }}
        action_ref: ${{ github.action_ref }}
      with:
        path: ${{ github.workspace }}/action-checkout
        repository: ${{ env.action_repo }}
        ref: ${{ env.action_ref }}

    - name: Set up Go
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version-file: ${{ github.workspace }}/action-checkout/go.mod

    - name: Build the program
      shell: sh
      run: |
        cd "${{ github.workspace }}/action-checkout"

        DESTDIR="$(go env GOPATH)/bin"
        mkdir -p "${DESTDIR}"

        go build \
          -o "${DESTDIR}/generate-policy-bot-config" \
          github.com/grafana/generate-policy-bot-config/cmd/generate-policy-bot-config

    - name: Check for drift
      shell: bash
      run: |
        NEW_CONFIG="$(generate-policy-bot-config \
          --output - \
          --merge-with ${{ inputs.merge_with }} \
          .)"

        if ! diff -u "${{ inputs.input_file }}" - <<< "${NEW_CONFIG}"; then
          echo "Drift detected: ${{ inputs.input_file }} is out-of-date. Regenerate it and commit the result."
          exit 1
        fi

        echo "No drift detected: ${{ inputs.input_file }} is up-to-date."
