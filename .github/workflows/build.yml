name: Build

permissions:
  contents: read
  id-token: write
  packages: write

on:
  pull_request:
    types:
      - edited
      - opened
      - ready_for_review
      - synchronize
    paths:
      - go.mod
      - go.sum
      - "**/*.go"
      - Dockerfile
      - .github/workflows/build.yml

  push:
    branches:
      - main
    paths:
      - go.mod
      - go.sum
      - "**/*.go"
      - Dockerfile
      - .github/workflows/build.yml

  release:
    types:
      - published

  merge_group:

jobs:
  main:
    permissions:
      attestations: write # for submitting SBOM and provenance attestations
      contents: write # for dependency submission API
      id-token: write # needed to sign SBOM and provenance attestations
      packages: write

    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE: grafana/generate-policy-bot-config
      PUSH_IMAGE: ${{ (github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')) || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set Docker Buildx up
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log into GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Calculate image metadata
        id: calculate-metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            # tag with branch name for `main`
            type=ref,event=branch,enable={{is_default_branch}}
            # tag with semver, and `latest`
            type=ref,event=tag
            # tag with pr-<number>-<sha>
            type=ref,suffix=-{{sha}},event=pr

      - name: Build and push
        id: build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          labels: ${{ steps.calculate-metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: mode=max
          push: ${{ env.PUSH_IMAGE != '' && env.PUSH_IMAGE || 'false' }}
          # Doesn't generate proper SBOMs; using syft directly lower down
          sbom: false
          tags: ${{ steps.calculate-metadata.outputs.tags }}

      - name: Extract platform-specific digests
        if: env.PUSH_IMAGE
        id: platform-digests
        shell: bash
        run: |
          declare -a TAGS
          TAGS=(${{ steps.calculate-metadata.outputs.tags }})

          REGISTRY_REF="${TAGS[0]}"
          BASE_REF="${REGISTRY_REF%%:*}"

          # Get digests for each platform
          MANIFEST_JSON="$(docker buildx imagetools inspect "${REGISTRY_REF}" --format '{{json .}}')"

          # Create fully qualified references and extract digests
          for arch in amd64 arm64; do
            ARCH_REF="$(jq -r ".manifest.manifests[] | select(.platform.architecture == \"${arch}\").digest" <<< "${MANIFEST_JSON}")"
            echo "${arch}-ref=${BASE_REF}@${ARCH_REF}" | tee -a "${GITHUB_OUTPUT}"
          done

      - name: Generate SBOM (amd64)
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          dependency-snapshot: true
          format: spdx-json
          image: ${{ steps.platform-digests.outputs.amd64-ref }}
          output-file: ${{ runner.temp }}/amd64.spdx.json

      - name: Attest SBOM (amd64)
        if: env.PUSH_IMAGE
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          sbom-path: ${{ runner.temp }}/amd64.spdx.json
          push-to-registry: true

      - name: Generate SBOM (arm64)
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          dependency-snapshot: true
          format: spdx-json
          image: ${{ steps.platform-digests.outputs.arm64-ref }}
          output-file: ${{ runner.temp }}/arm64.spdx.json

      - name: Attest SBOM (arm64)
        if: env.PUSH_IMAGE
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          sbom-path: ${{ runner.temp }}/arm64.spdx.json
          push-to-registry: true

      - name: Generate build provenance attestation
        if: env.PUSH_IMAGE
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
